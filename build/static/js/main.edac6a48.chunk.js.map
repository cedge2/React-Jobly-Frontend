{"version":3,"sources":["hooks/useLocalStorage.js","auth/UserContext.js","routes-nav/NavBar.js","home/Home.js","common/Alert.js","auth/LoginForm.js","auth/SignupForm.js","common/SearchForm.js","api/api.js","companies/CompanyCard.js","common/LoadingSpinner.js","companies/CompanyList.js","jobs/JobCard.js","jobs/JobCardList.js","companies/CompanyDetail.js","jobs/JobList.js","profile/ProfileForm.js","routes-nav/PrivateRoute.js","routes-nav/Routes.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","firstValue","arguments","length","undefined","initialValue","localStorage","getItem","item","setItem","useState","useEffect","removeItem","UserContext","React","createContext","NavBar","_ref","logout","currentUser","useContext","LoggedInUser","createElement","className","NavLink","to","Link","onClick","first_name","username","LoggedOutUser","exact","Nav","Home","firstName","Alert","type","messages","concat","role","map","message","LoginForm","login","formInputData","setFormInputData","password","formErrors","setFormErrors","history","useHistory","handleChange","event","name","value","target","onSubmit","async","preventDefault","result","success","push","errors","htmlFor","id","onChange","style","width","SignupForm","signup","lastName","email","SearchForm","search","searchInput","setSearchInput","searchTerm","trim","placeholder","JoblyApi","endpoint","data","method","console","debug","url","process","headers","Authorization","token","params","axios","err","error","response","Array","isArray","this","request","user","companies","handle","company","title","jobs","CompanyCard","description","logoUrl","src","alt","LoadingSpinner","CompanyList","setCompanies","getCompanies","JobCard","salary","equity","companyName","hasAppliedToJob","applyToJob","applied","setApplied","salaryToString","toString","str","i","charAt","outputString","reverseArray","slice","substring","splitString","split","reverse","shift","join","addCommasToSalary","disabled","JobCardList","apply","job","CompanyDetail","useParams","setCompany","getCompany","getCompanyDetail","JobList","setJobs","getJobs","ProfileForm","setCurrentUser","saveConfirmed","setSaveConfirmed","updatedUser","profileData","saveProfile","PrivateRoute","path","children","Route","Redirect","Routes","Switch","App","infoLoaded","setInfoLoaded","applicationIds","setApplicationIds","Set","setToken","has","jwt","decode","getCurrentUser","BrowserRouter","Provider","loginData","signupData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yuBAoBeA,MAlBf,SAAyBC,GAAyB,IAApBC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACzC,MAAMG,EAAeC,aAAaC,QAAQP,IAAQC,GAE3CO,EAAMC,GAAWC,mBAASL,GAYjC,OAVAM,qBACE,WACe,OAATH,EACFF,aAAaM,WAAWZ,GAExBM,aAAaG,QAAQT,EAAKQ,KAG9B,CAACR,EAAKQ,IAED,CAACA,EAAMC,I,kBCbDI,MAFKC,IAAMC,gBC4DXC,MAxDf,SAAeC,GAAc,IAAb,OAAEC,GAAQD,EACxB,MAAM,YAAEE,GAAgBC,qBAAWP,GAEnC,SAASQ,IACP,OACEP,IAAAQ,cAAA,MAAIC,UAAU,cACZT,IAAAQ,cAAA,MAAIC,UAAU,YACZT,IAAAQ,cAACE,IAAO,CAACD,UAAU,WAAWE,GAAG,cAAa,cAIhDX,IAAAQ,cAAA,MAAIC,UAAU,YACZT,IAAAQ,cAACE,IAAO,CAACD,UAAU,WAAWE,GAAG,SAAQ,SAI3CX,IAAAQ,cAAA,MAAIC,UAAU,YACZT,IAAAQ,cAACE,IAAO,CAACD,UAAU,WAAWE,GAAG,YAAW,YAI9CX,IAAAQ,cAAA,MAAIC,UAAU,YACZT,IAAAQ,cAACI,IAAI,CAACH,UAAU,WAAWE,GAAG,IAAIE,QAAST,GAAQ,WACxCC,EAAYS,YAAcT,EAAYU,YAOzD,SAASC,IACP,OACEhB,IAAAQ,cAAA,MAAIC,UAAU,cACZT,IAAAQ,cAAA,MAAIC,UAAU,YACZT,IAAAQ,cAACE,IAAO,CAACD,UAAU,WAAWQ,OAAK,EAACN,GAAG,UAAS,UAIlDX,IAAAQ,cAAA,MAAIC,UAAU,YACZT,IAAAQ,cAACE,IAAO,CAACD,UAAU,WAAWQ,OAAK,EAACN,GAAG,WAAU,aAQzD,OACEX,IAAAQ,cAACU,IAAG,CAACT,UAAU,2BACbT,IAAAQ,cAACE,IAAO,CAACD,UAAU,eAAeQ,OAAK,EAACN,GAAG,KAAI,SAG9CN,EAAcL,IAAAQ,cAACD,EAAY,MAAMP,IAAAQ,cAACQ,EAAa,Q,qBCrBvCG,MAhCf,WACE,MAAM,YAAEd,GAAgBC,qBAAWP,GACnC,OACEC,IAAAQ,cAAA,OAAKC,UAAU,YACbT,IAAAQ,cAAA,OAAKC,UAAU,yBACbT,IAAAQ,cAAA,MAAIC,UAAU,SAAQ,SACtBT,IAAAQ,cAAA,KAAGC,UAAU,UAAS,0CACrBJ,EACCL,IAAAQ,cAAA,MAAIC,UAAU,oBAAmB,gBACjBJ,EAAYe,WAAaf,EAAYU,SAAS,KAG9Df,IAAAQ,cAAA,KAAGC,UAAU,oBACXT,IAAAQ,cAACI,IAAI,CACHH,UAAU,iDACVE,GAAG,UACJ,UAGDX,IAAAQ,cAACI,IAAI,CACHH,UAAU,4CACVE,GAAG,WACJ,eCbEU,MAZf,SAAclB,GAAsC,IAArC,KAAEmB,EAAO,SAAQ,SAAEC,EAAW,IAAIpB,EAC/C,OACEH,IAAAQ,cAAA,OAAKC,UAAS,eAAAe,OAAiBF,GAAQG,KAAK,SACzCF,EAASG,IAAKC,GACb3B,IAAAQ,cAAA,KAAGC,UAAU,YAAYvB,IAAKyC,GAC3BA,M,OCkEIC,MApEf,SAAkBzB,GAAa,IAAZ,MAAE0B,GAAO1B,EAC1B,MAAO2B,EAAeC,GAAoBnC,mBAAS,CACjDmB,SAAU,GACViB,SAAU,MAGLC,EAAYC,GAAiBtC,mBAAS,KAEvC,SAAEmB,EAAQ,SAAEiB,GAAaF,EAEzBK,EAAUC,cAEVC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAC9BV,EAAkBD,IAAa,IAAWA,EAAe,CAACS,GAAOC,MAanE,OACExC,IAAAQ,cAAA,OAAKC,UAAU,aACbT,IAAAQ,cAAA,MAAIC,UAAU,gBAAe,gBAE7BT,IAAAQ,cAAA,QAAMkC,SAdVC,eAA4BL,GAC1BA,EAAMM,iBACN,IAAIC,QAAehB,EAAMC,GACrBe,EAAOC,QACTX,EAAQY,KAAK,KAEbb,EAAcW,EAAOG,UASnBhD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,YAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,OACLiB,KAAK,WACLC,MAAOzB,EACPoC,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,YAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,WACLiB,KAAK,WACLC,MAAOR,EACPmB,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAInBpB,EAAW5C,OACVW,IAAAQ,cAACa,EAAK,CAACC,KAAK,SAASC,SAAUU,IAC7B,KAEJjC,IAAAQ,cAAA,UAAQC,UAAU,aAAY,a,OC6CvB6C,MA5Gf,SAAmBnD,GAAc,IAAb,OAAEoD,GAAQpD,EAC5B,MAAO2B,EAAeC,GAAoBnC,mBAAS,CACjDmB,SAAU,GACViB,SAAU,GACVZ,UAAW,GACXoC,SAAU,GACVC,MAAO,MAGFxB,EAAYC,GAAiBtC,mBAAS,KAEvC,SAAEmB,EAAQ,SAAEiB,EAAQ,UAAEZ,EAAS,SAAEoC,EAAQ,MAAEC,GAAU3B,EAErDK,EAAUC,cAEVC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAC9BV,EAAkBD,IAAa,IAAWA,EAAe,CAACS,GAAOC,MAanE,OACExC,IAAAQ,cAAA,OAAKC,UAAU,cACbT,IAAAQ,cAAA,MAAIC,UAAU,iBAAgB,YAC9BT,IAAAQ,cAAA,QAAMkC,SAbVC,eAA4BL,GAC1BA,EAAMM,iBACN,IAAIC,QAAeU,EAAOzB,GACtBe,EAAOC,QACTX,EAAQY,KAAK,KAEbb,EAAcW,EAAOG,UAQnBhD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,YAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,OACLiB,KAAK,WACLC,MAAOzB,EACPoC,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,YAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,WACLiB,KAAK,WACLC,MAAOR,EACPmB,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,aAAY,cAG7CjD,IAAAQ,cAAA,SACE0C,GAAG,YACH5B,KAAK,OACLiB,KAAK,YACLC,MAAOpB,EACP+B,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,aAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,OACLiB,KAAK,WACLC,MAAOgB,EACPL,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,SAAQ,SAGzCjD,IAAAQ,cAAA,SACE0C,GAAG,QACH5B,KAAK,QACLiB,KAAK,QACLC,MAAOiB,EACPN,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGnBpB,EAAW5C,OACVW,IAAAQ,cAACa,EAAK,CAACC,KAAK,SAASC,SAAUU,IAC7B,KAEJjC,IAAAQ,cAAA,UAAQC,UAAU,cAAa,a,OCtExBiD,MAnCf,SAAmBvD,GAAc,IAAb,OAAEwD,GAAQxD,EAC5B,MAAOyD,EAAaC,GAAkBjE,mBAAS,KAEzC,WAAEkE,GAAeF,EAavB,OACE5D,IAAAQ,cAAA,WACER,IAAAQ,cAAA,QAAMC,UAAU,cAAciC,SAblC,SAAsBJ,GACpBA,EAAMM,iBAENe,EAAOC,EAAYG,aAAUzE,GAC7BuE,EAAeD,EAAYG,UAUvB/D,IAAAQ,cAAA,SACEC,UAAU,eACVa,KAAK,OACLiB,KAAK,aACLC,MAAOsB,EACPX,SAZR,SAAsBb,GACpB,MAAM,MAAEE,GAAUF,EAAMG,OACxBoB,EAAerB,IAWTwB,YAAY,0BAEdhE,IAAAQ,cAAA,UAAQc,KAAK,SAASb,UAAU,0BAAyB,a,kBC1BjE,MAAMwD,EAGJ,qBAAqBC,GAAsC,IAA5BC,EAAI/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIgF,EAAMhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MACjDiF,QAAQC,MAAM,YAAaJ,EAAUC,EAAMC,GAE3C,MAAMG,EAAG,GAAA/C,OARIgD,uCAQU,KAAAhD,OAAI0C,GACrBO,EAAU,CAAEC,cAAc,UAADlD,OAAYyC,EAASU,QAC9CC,EAAoB,QAAXR,EAAmBD,EAAO,GAEzC,IACE,aAAcU,IAAM,CAAEN,MAAKH,SAAQD,OAAMS,SAAQH,aAAYN,KAC7D,MAAOW,GACPT,QAAQU,MAAM,aAAcD,EAAIE,UAChC,IAAIrD,EAAUmD,EAAIE,SAASb,KAAKY,MAAMpD,QACtC,MAAMsD,MAAMC,QAAQvD,GAAWA,EAAU,CAACA,IAI9C,4BAA4BZ,GAE1B,aADgBoE,KAAKC,QAAQ,SAAD5D,OAAUT,KAC3BsE,KAGb,0BAA0B9C,GAExB,aADgB4C,KAAKC,QAAQ,YAAa,CAAE7C,UACjC+C,UAGb,wBAAwBC,GAEtB,aADgBJ,KAAKC,QAAQ,aAAD5D,OAAc+D,KAC/BC,QAGb,qBAAqBC,GAEnB,aADgBN,KAAKC,QAAQ,OAAQ,CAAEK,WAC5BC,KAGb,wBAAwB3E,EAAUmC,SAC1BiC,KAAKC,QAAQ,SAAD5D,OAAUT,EAAQ,UAAAS,OAAS0B,GAAM,GAAI,QAGzD,oBAAoBiB,GAElB,aADgBgB,KAAKC,QAAQ,gBAAiBjB,EAAM,SACzCQ,MAGb,mBAAmBR,GAEjB,aADgBgB,KAAKC,QAAQ,aAAcjB,EAAM,SACtCQ,MAGb,yBAAyB5D,EAAUoD,GAEjC,aADgBgB,KAAKC,QAAQ,SAAD5D,OAAUT,GAAYoD,EAAM,UAC7CkB,MAIApB,Q,OC3CA0B,MAff,SAAoBxF,GAA0C,IAAzC,OAAEoF,EAAM,KAAEhD,EAAI,YAAEqD,EAAW,QAAEC,GAAS1F,EACzD,OACEH,IAAAQ,cAACI,IAAI,CAACH,UAAU,mBAAmBE,GAAE,cAAAa,OAAgB+D,IACnDvF,IAAAQ,cAAA,OAAKC,UAAU,QACbT,IAAAQ,cAAA,MAAIC,UAAU,aAAa8B,GAC3BvC,IAAAQ,cAAA,MAAIC,UAAU,eAAemF,GAC7B5F,IAAAQ,cAAA,MAAIC,UAAU,QACXoF,GACC7F,IAAAQ,cAAA,OAAKsF,IAAKD,EAASE,IAAKxD,EAAM9B,UAAU,yB,cCNrCuF,MAJf,WACE,OAAOhG,IAAAQ,cAAA,OAAKC,UAAU,kBAAiB,gBCwC1BwF,MArCf,WACE,MAAOX,EAAWY,GAAgBtG,mBAAS,IAM3C+C,eAAegB,EAAOpB,GACpB,IAAI+C,QAAkBrB,EAASkC,aAAa5D,GAC5C2D,EAAaZ,GAGf,OATAzF,qBAAU,WACR8D,MACC,IAOE2B,EAKHtF,IAAAQ,cAAA,OAAKC,UAAU,oCACbT,IAAAQ,cAACkD,EAAU,CAACC,OAAQA,IACnB2B,EAAUjG,OACTW,IAAAQ,cAAA,OAAKC,UAAU,oBACZ6E,EAAU5D,IAAK8D,GACdxF,IAAAQ,cAACmF,EAAW,CACVzG,IAAKsG,EAAQD,OACbA,OAAQC,EAAQD,OAChBhD,KAAMiD,EAAQjD,KACdqD,YAAaJ,EAAQI,YACrBC,QAASL,EAAQK,YAKvB7F,IAAAQ,cAAA,KAAGC,UAAU,QAAO,kCAnBjBT,IAAAQ,cAACwF,EAAc,O,OC8DXI,MA9Ef,SAAgBjG,GAA8C,IAA7C,GAAE+C,EAAE,MAAEuC,EAAK,OAAEY,EAAM,OAAEC,EAAM,YAAEC,GAAapG,EACzD,MAAM,gBAAEqG,EAAe,WAAEC,GAAenG,qBAAWP,IAE5C2G,EAASC,GAAc/G,qBAe9B,OAbAC,qBACE,WACE8G,EAAWH,EAAgBtD,MAE7B,CAACA,EAAIsD,IAULxG,IAAAQ,cAAA,OAAKC,UAAU,QACbT,IAAAQ,cAAA,OAAKC,UAAU,aACbT,IAAAQ,cAAA,MAAIC,UAAU,cAAcgF,GAC5BzF,IAAAQ,cAAA,KAAGC,UAAU,gBAAe,IAAE8F,GAC7BF,GACCrG,IAAAQ,cAAA,WACER,IAAAQ,cAAA,aAAO,WAiBnB,SAA2B6F,GACzB,MAAMO,EAAiBP,EAAOQ,WAC9B,IAAIC,EAAM,GAEV,IAAK,IAAIC,EAAIH,EAAevH,OAAS,EAAG0H,GAAK,EAAGA,IAC9CD,GAAOF,EAAeI,OAAOD,GAG/B,IAEIE,EAAe,GACfC,EAAe,GAEnB,IAAK,IAAIH,EAAI,EAAGA,EAAID,EAAIzH,OAAQ0H,GALxB,EAKgC,CACtC,IAAII,EAAQL,EAAIM,UAAUL,EANpB,EAM2BA,GAN3B,IAOFI,EAAM9H,OACR4H,EAAeA,EAAazF,OAAO2F,EAPtB,MADT,IAUIA,EAAM9H,QAAgByH,EAAIzH,QAV9B,OAU8C8H,EAAM9H,UACxD4H,EAAeA,EAAazF,OAAO2F,IAGvC,IAAIE,EAAcJ,EAAaK,MAAM,IAIrC,GAFAJ,EAAeG,EAAYE,UAEH,MAApBL,EAAa,GAAY,CAG3B,OAFAA,EAAaM,QACGN,EAAaO,KAAK,IAIlC,OADgBP,EAAaO,KAAK,IAhDVC,CAAkBrB,UAG1B/G,IAAXgH,GACCtG,IAAAQ,cAAA,WACER,IAAAQ,cAAA,aAAO,WAAS8F,IAIpBtG,IAAAQ,cAAA,UAAQC,UAAU,YAAYI,QAtBpC8B,eAA2BL,GACrBkE,EAAgBtD,KACpBuD,EAAWvD,GACXyD,GAAW,KAmB6CgB,SAAUjB,GAC3DA,EAAU,UAAY,YCnBlBkB,MAjBf,SAAoBzH,GAAmB,IAAlB,KAAEuF,EAAI,MAAEmC,GAAO1H,EAClC,OACEH,IAAAQ,cAAA,OAAKC,UAAU,eAEZiF,EAAKhE,IAAKoG,GACT9H,IAAAQ,cAAC4F,EAAO,CACNlH,IAAK4I,EAAI5E,GACTA,GAAI4E,EAAI5E,GACRuC,MAAOqC,EAAIrC,MACXY,OAAQyB,EAAIzB,OACZC,OAAQwB,EAAIxB,OACZC,YAAauB,EAAIvB,iBCsBZwB,MA9Bf,WACE,MAAM,OAAExC,GAAWyC,eACZxC,EAASyC,GAAcrI,mBAAS,CACrC2C,KAAM,GACNqD,YAAa,GACbL,OAAQ,GACRG,KAAM,KAcR,OAXA7F,qBACE,YACE8C,iBACE,IAAI6C,QAAgBvB,EAASiE,WAAW3C,GACxC0C,EAAWzC,GAEb2C,KAEF,CAAC5C,IAGEC,EAGHxF,IAAAQ,cAAA,OAAKC,UAAU,sCACbT,IAAAQ,cAAA,UAAKgF,EAAQjD,MACbvC,IAAAQ,cAAA,SAAIgF,EAAQI,aACZ5F,IAAAQ,cAACoH,EAAW,CAAClC,KAAMF,EAAQE,QANV1F,IAAAQ,cAACwF,EAAc,OCKvBoC,MAxBf,WACE,MAAO1C,EAAM2C,GAAWzI,mBAAS,MAIjC+C,eAAegB,EAAO8B,GACpB,IAAIC,QAAazB,EAASqE,QAAQ7C,GAClC4C,EAAQ3C,GAEV,OAPA7F,qBAAU,WACR8D,MACC,IAKE+B,EAIH1F,IAAAQ,cAAA,OAAKC,UAAU,gCACbT,IAAAQ,cAACkD,EAAU,CAACC,OAAQA,IACnB+B,EAAKrG,OACJW,IAAAQ,cAACoH,EAAW,CAAClC,KAAMA,IAEnB1F,IAAAQ,cAAA,KAAGC,UAAU,aAAY,kCARtBT,IAAAQ,cAACwF,EAAc,O,OC8HXuC,MAzIf,WACE,MAAM,YAAElI,EAAW,eAAEmI,GAAmBlI,qBAAWP,IAC5C+B,EAAeC,GAAoBnC,mBAAS,CACjDmB,SAAUV,EAAYU,SACtBK,UAAWf,EAAYe,UACvBoC,SAAUnD,EAAYmD,SACtBC,MAAOpD,EAAYoD,MACnBzB,SAAU,MAGLC,EAAYC,GAAiBtC,mBAAS,KAEtC6I,EAAeC,GAAoB9I,oBAAS,GAE7CyC,EAAgBC,IAEpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAE9BV,EAAkBD,IAAa,IAAWA,EAAe,CAACS,GAAOC,KAEjEN,EAAc,KAiChB,OACElC,IAAAQ,cAAA,OAAKC,UAAU,eACbT,IAAAQ,cAAA,UAAI,YACJR,IAAAQ,cAAA,QAAMkC,SAjCVC,eAA4BL,GAC1BA,EAAMM,iBAEN,IASI+F,EATAC,EAAc,CAChBxH,UAAWU,EAAcV,UACzBoC,SAAU1B,EAAc0B,SACxBC,MAAO3B,EAAc2B,MACrBzB,SAAUF,EAAcE,UAGtBjB,EAAWe,EAAcf,SAI7B,IAEE4H,QAAoB1E,EAAS4E,YAAY9H,EAAU6H,GACnD,MAAO5F,GAEP,YADAd,EAAcc,GAIhBjB,EAAkBD,IAAa,IAAWA,EAAeE,SAAU,MAEnEE,EAAc,IACdwG,GAAiB,GAEjBF,EAAeG,KAOX3I,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,YAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,OACLiB,KAAK,WACLC,MAAOV,EAAcf,SACrBoC,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAIpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,aAAY,cAG7CjD,IAAAQ,cAAA,SACE0C,GAAG,YACH5B,KAAK,OACLiB,KAAK,YACLC,MAAOV,EAAcV,UACrB+B,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,aAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,OACLiB,KAAK,WACLC,MAAOV,EAAc0B,SACrBL,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,SAAQ,SAGzCjD,IAAAQ,cAAA,SACE0C,GAAG,QACH5B,KAAK,QACLiB,KAAK,QACLC,MAAOV,EAAc2B,MACrBN,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAGpBrD,IAAAQ,cAAA,WACER,IAAAQ,cAAA,SAAOC,UAAU,QAAQwC,QAAQ,YAAW,YAG5CjD,IAAAQ,cAAA,SACE0C,GAAG,WACH5B,KAAK,WACLiB,KAAK,WACLC,MAAOV,EAAcE,SACrBmB,SAAUd,EACVe,MAAO,CAAEC,MAAO,YAInBpB,EAAW5C,OACVW,IAAAQ,cAACa,EAAK,CAACC,KAAK,SAASC,SAAUU,IAC7B,KAEHwG,EACCzI,IAAAQ,cAACa,EAAK,CAACC,KAAK,UAAUC,SAAU,CAAC,2BAC/B,KAEJvB,IAAAQ,cAAA,UAAQC,UAAU,eAAc,mBCjHzBqI,MArBf,SAAqB3I,GAA6B,IAA5B,MAAEc,EAAK,KAAE8H,EAAI,SAAEC,GAAU7I,EAC7C,MAAM,YAAEE,GAAgBC,qBAAWP,GASnC,OAPAsE,QAAQC,MACJ,eACA,SAAUrD,EACV,QAAS8H,EACT,eAAgB1I,GAGfA,EAKDL,IAAAQ,cAACyI,IAAK,CAAChI,MAAOA,EAAO8H,KAAMA,GACxBC,GALEhJ,IAAAQ,cAAC0I,IAAQ,CAACvI,GAAG,YCsDTwI,MA/Cf,SAAehJ,GAAqB,IAApB,OAAEoD,EAAM,MAAE1B,GAAO1B,EAC/B,OACEH,IAAAQ,cAAA,OAAKC,UAAU,UACbT,IAAAQ,cAAC4I,IAAM,KAELpJ,IAAAQ,cAACyI,IAAK,CAAChI,OAAK,EAAC8H,KAAK,KAChB/I,IAAAQ,cAACW,EAAI,OAGPnB,IAAAQ,cAACyI,IAAK,CAAChI,OAAK,EAAC8H,KAAK,WAChB/I,IAAAQ,cAAC8C,EAAU,CAACC,OAAQA,KAGtBvD,IAAAQ,cAACyI,IAAK,CAAChI,OAAK,EAAC8H,KAAK,UAChB/I,IAAAQ,cAACoB,EAAS,CAACC,MAAOA,KAGpB7B,IAAAQ,cAACsI,EAAY,CAAC7H,OAAK,EAAC8H,KAAK,cACvB/I,IAAAQ,cAACyF,EAAW,OAGdjG,IAAAQ,cAACsI,EAAY,CAACC,KAAK,sBACjB/I,IAAAQ,cAACuH,EAAa,OAGhB/H,IAAAQ,cAACsI,EAAY,CAAC7H,OAAK,EAAC8H,KAAK,SACvB/I,IAAAQ,cAAC4H,EAAO,OAGVpI,IAAAQ,cAACsI,EAAY,CAAC7H,OAAK,EAAC8H,KAAK,YACvB/I,IAAAQ,cAAC+H,EAAW,OAGdvI,IAAAQ,cAACyI,IAAK,KACJjJ,IAAAQ,cAAA,WACER,IAAAQ,cAAA,KAAGC,UAAU,iBAAgB,gCAG7BT,IAAAQ,cAAA,KAAGC,UAAU,iBAAgB,mD,kBCkC1B4I,MAlFf,WACE,MAAOC,EAAYC,GAAiB3J,oBAAS,IACtC4J,EAAgBC,GAAqB7J,mBAAS,IAAI8J,IAAI,MACtDrJ,EAAamI,GAAkB5I,mBAAS,OACxC+E,EAAOgF,GAAY1K,EANI,eAyD9B,SAASuH,EAAgBtD,GACvB,OAAOsG,EAAeI,IAAI1G,GAS5B,OA3DArD,qBACE,WAgBE0J,GAAc,GAfd5G,iBACE,GAAIgC,EACF,IAEE,IAAI,SAAE5D,GAAa8I,IAAIC,OAAOnF,GAC9BV,EAASU,MAAQA,EACjB,IAAItE,QAAoB4D,EAAS8F,eAAehJ,GAChDyH,EAAenI,GACf,MAAOyE,GACPT,QAAQU,MAAM,oCAAqCD,GACnD0D,EAAe,MAGnBe,GAAc,GAGhBQ,KAEF,CAACpF,IAuCE2E,EAGHtJ,IAAAQ,cAACwJ,IAAa,KAEZhK,IAAAQ,cAACT,EAAYkK,SAAQ,CACnBzH,MAAO,CAAEnC,cAAamI,iBAAgBhC,kBAAiBC,WAZ7D,SAAoBvD,GACdsD,EAAgBtD,KACpBe,EAASwC,WAAWpG,EAAYU,SAAUmC,GAC1CuG,EAAkB,IAAIC,IAAI,IAAIF,EAAgBtG,SAW1ClD,IAAAQ,cAAA,OAAKC,UAAU,OACbT,IAAAQ,cAACN,EAAM,CAACE,OA7ChB,WACEoI,EAAe,MACfmB,EAAS,SA4CH3J,IAAAQ,cAAC2I,EAAM,CAACtH,MA9BhBc,eAAqBuH,GACnB,IACE,IAAIvF,QAAcV,EAASpC,MAAMqI,GAEjC,OADAP,EAAShF,GACF,CAAE7B,SAAS,GAClB,MAAOE,GAEP,OADAqB,QAAQU,MAAM,eAAgB/B,GACvB,CAAEF,SAAS,EAAOE,YAuBCO,OAzC9BZ,eAAsBwH,GACpB,IACE,IAAIxF,QAAcV,EAASV,OAAO4G,GAElC,OADAR,EAAShF,GACF,CAAE7B,SAAS,GAClB,MAAOE,GAEP,OADAqB,QAAQU,MAAM,gBAAiB/B,GACxB,CAAEF,SAAS,EAAOE,iBAwBLhD,IAAAQ,cAACwF,EAAc,OCjErBoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1K,IAAAQ,cAAC6I,EAAG,MAAKsB,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAKC,IACjCA,EAAaC,iB","file":"static/js/main.edac6a48.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(\n    function setKeyInLocalStorage() {\n      if (item === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, item);\n      }\n    },\n    [key, item]\n  );\n  return [item, setItem];\n}\n\nexport default useLocalStorage;","import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { useContext } from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction NavBar({ logout }) {\n  const { currentUser } = useContext(UserContext);\n\n  function LoggedInUser() {\n    return (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/companies\">\n            Companies\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/jobs\">\n            Jobs\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/profile\">\n            Profile\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n            Log out {currentUser.first_name || currentUser.username}\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n\n  function LoggedOutUser() {\n    return (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/login\">\n            Login\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/signup\">\n            Sign Up\n          </NavLink>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <Nav className=\"navBar navbar-expand-md\">\n      <NavLink className=\"navbar-brand\" exact to=\"/\">\n        Jobly\n      </NavLink>\n      {currentUser ? <LoggedInUser /> : <LoggedOutUser />}\n    </Nav>\n  );\n}\nexport default NavBar;","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const { currentUser } = useContext(UserContext);\n  return (\n    <div className=\"Homepage\">\n      <div className=\"container text-center\">\n        <h1 className=\"title\">Jobly</h1>\n        <p className=\"header\">All the jobs in one, convenient place!</p>\n        {currentUser ? (\n          <h2 className=\"welcome-back-msg\">\n            Welcome Back {currentUser.firstName || currentUser.username}!\n          </h2>\n        ) : (\n          <p className=\"HomePage-buttons\">\n            <Link\n              className=\"HomePage-btn btn-primary font-weight-bold mr-3\"\n              to=\"/login\"\n            >\n              Log in\n            </Link>\n            <Link\n              className=\"HomePage-btn btn-primary font-weight-bold\"\n              to=\"/signup\"\n            >\n              Sign up\n            </Link>\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  return (\n    <div className={`alert alert-${type}`} role=\"alert\">\n      {messages.map((message) => (\n        <p className=\"alert-msg\" key={message}>\n          {message}\n        </p>\n      ))}\n    </div>\n  );\n}\n\nexport default Alert;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport \"./LoginForm.css\";\n\nfunction LoginForm({ login }) {\n  const [formInputData, setFormInputData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState([]);\n\n  const { username, password } = formInputData;\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormInputData((formInputData) => ({ ...formInputData, [name]: value }));\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let result = await login(formInputData);\n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  return (\n    <div className=\"LoginForm\">\n      <h1 className=\"login-header\">Please Login</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label className=\"label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n\n        {formErrors.length ? (\n          <Alert type=\"danger\" messages={formErrors} />\n        ) : null}\n\n        <button className=\"Login-btn\">Submit</button>\n      </form>\n    </div>\n  );\n}\nexport default LoginForm;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport \"./SignupForm.css\";\n\nfunction SignupForm({ signup }) {\n  const [formInputData, setFormInputData] = useState({\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState([]);\n\n  const { username, password, firstName, lastName, email } = formInputData;\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormInputData((formInputData) => ({ ...formInputData, [name]: value }));\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let result = await signup(formInputData);\n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  return (\n    <div className=\"SignupForm\">\n      <h1 className=\"signup-header\"> Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label className=\"label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"firstName\">\n            First Name\n          </label>\n          <input\n            id=\"firstName\"\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"lastName\">\n            Last Name\n          </label>\n          <input\n            id=\"lastName\"\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        {formErrors.length ? (\n          <Alert type=\"danger\" messages={formErrors} />\n        ) : null}\n\n        <button className=\"signup-btn\">Submit</button>\n      </form>\n    </div>\n  );\n}\nexport default SignupForm;","import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\n\nfunction SearchForm({ search }) {\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const { searchTerm } = searchInput;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    search(searchInput.trim() || undefined);\n    setSearchInput(searchInput.trim());\n  }\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setSearchInput(value);\n  }\n  return (\n    <div>\n      <form className=\"form-inline\" onSubmit={handleSubmit}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          name=\"searchTerm\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"Enter Search Term ...\"\n        />\n        <button type=\"submit\" className=\"btn btn-lg btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchForm;","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nclass JoblyApi {\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", { name });\n    return res.companies;\n  }\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", { title });\n    return res.jobs;\n  }\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\n\nexport default JoblyApi;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./CompanyCard.css\";\n\nfunction CompanyCard({ handle, name, description, logoUrl }) {\n  return (\n    <Link className=\"CompanyCard-link\" to={`/companies/${handle}`}>\n      <div className=\"card\">\n        <h4 className=\"card-name\">{name}</h4>\n        <h5 className=\"description\">{description}</h5>\n        <h5 className=\"logo\">\n          {logoUrl && (\n            <img src={logoUrl} alt={name} className=\"float-right ml-5\" />\n          )}\n        </h5>\n      </div>\n    </Link>\n  );\n}\nexport default CompanyCard;","import React from \"react\";\nimport \"./LoadingSpinner.css\";\n\nfunction LoadingSpinner() {\n  return <div className=\"LoadingSpinner\">Loading ...</div>;\n}\n\nexport default LoadingSpinner;","import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport CompanyCard from \"./CompanyCard\";\nimport \"./CompanyList.css\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nfunction CompanyList() {\n  const [companies, setCompanies] = useState([]);\n\n  useEffect(function getAllCompaniesOnRender() {\n    search();\n  }, []);\n\n  async function search(name) {\n    let companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  }\n\n  if (!companies) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <div className=\"CompanyList col-md-8 offset-md-2\">\n      <SearchForm search={search} />\n      {companies.length ? (\n        <div className=\"CompanyList-list\">\n          {companies.map((company) => (\n            <CompanyCard\n              key={company.handle}\n              handle={company.handle}\n              name={company.name}\n              description={company.description}\n              logoUrl={company.logoUrl}\n            />\n          ))}\n        </div>\n      ) : (\n        <p className=\"lead\">Sorry, no results were found!</p>\n      )}\n    </div>\n  );\n}\nexport default CompanyList;","import React, { useEffect, useState, useContext } from \"react\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./JobCard.css\";\n\nfunction JobCard({ id, title, salary, equity, companyName }) {\n  const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n\n  const [applied, setApplied] = useState();\n\n  useEffect(\n    function updateAppliedStatus() {\n      setApplied(hasAppliedToJob(id));\n    },\n    [id, hasAppliedToJob]\n  );\n\n  async function handleApply(event) {\n    if (hasAppliedToJob(id)) return;\n    applyToJob(id);\n    setApplied(true);\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"container\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p className=\"company-name\"> {companyName}</p>\n        {salary && (\n          <div>\n            <small>Salary: {addCommasToSalary(salary)}</small>\n          </div>\n        )}\n        {equity !== undefined && (\n          <div>\n            <small>Equity: {equity}</small>\n          </div>\n        )}\n\n        <button className=\"apply-btn\" onClick={handleApply} disabled={applied}>\n          {applied ? \"APPLIED\" : \"APPLY\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction addCommasToSalary(salary) {\n  const salaryToString = salary.toString();\n  let str = \"\";\n\n  for (let i = salaryToString.length - 1; i >= 0; i--) {\n    str += salaryToString.charAt(i);\n  }\n\n  let n = 3;\n  let insertChar = \",\";\n  let outputString = \"\"; \n  let reverseArray = []; \n\n  for (let i = 0; i < str.length; i += n) {\n    let slice = str.substring(i, n + i);\n    if (slice.length === n) {\n      outputString = outputString.concat(slice, insertChar);\n    }\n    else if ((slice.length === n && str.length <= n) || slice.length !== n) {\n      outputString = outputString.concat(slice);\n    }\n  }\n  let splitString = outputString.split(\"\");\n\n  reverseArray = splitString.reverse();\n\n  if (reverseArray[0] === \",\") {\n    reverseArray.shift();\n    let joinArray = reverseArray.join(\"\");\n    return joinArray;\n  } else {\n    let joinArray = reverseArray.join(\"\");\n    return joinArray;\n  }\n}\n\nexport default JobCard;","import React from \"react\";\nimport JobCard from \"./JobCard\";\n\nfunction JobCardList({ jobs, apply }) {\n  return (\n    <div className=\"JobCardList\">\n\n      {jobs.map((job) => (\n        <JobCard\n          key={job.id}\n          id={job.id}\n          title={job.title}\n          salary={job.salary}\n          equity={job.equity}\n          companyName={job.companyName}\n        />\n      ))}\n    </div>\n  );\n}\nexport default JobCardList;","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api/api\";\nimport JobCardList from \"../jobs/JobCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nfunction CompanyDetail() {\n  const { handle } = useParams();\n  const [company, setCompany] = useState({\n    name: \"\",\n    description: \"\",\n    handle: \"\",\n    jobs: [],\n  });\n\n  useEffect(\n    function getCompanyAndJobs() {\n      async function getCompanyDetail() {\n        let company = await JoblyApi.getCompany(handle);\n        setCompany(company);\n      }\n      getCompanyDetail();\n    },\n    [handle]\n  );\n\n  if (!company) return <LoadingSpinner />;\n\n  return (\n    <div className=\"CompanyDetail col-md-8 offset-md-2\">\n      <h2>{company.name}</h2>\n      <p>{company.description}</p>\n      <JobCardList jobs={company.jobs} />\n    </div>\n  );\n}\nexport default CompanyDetail;","import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport JobCardList from \"./JobCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n\nfunction JobList() {\n  const [jobs, setJobs] = useState(null);\n  useEffect(function getAllJobsOnRender() {\n    search();\n  }, []);\n  async function search(title) {\n    let jobs = await JoblyApi.getJobs(title);\n    setJobs(jobs);\n  }\n  if (!jobs) {\n    return <LoadingSpinner />;\n  }\n    return (\n    <div className=\"JobList col-md-8 offset-md-2\">\n      <SearchForm search={search} />\n      {jobs.length ? (\n        <JobCardList jobs={jobs} />\n      ) : (\n        <p className=\"error-msg\">Sorry, no results were found!</p>\n      )}\n    </div>\n  );\n}\n\nexport default JobList;","import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./ProfileForm.css\";\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [formInputData, setFormInputData] = useState({\n    username: currentUser.username,\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    password: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState([]);\n\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n\n  const handleChange = (event) => {\n\n    const { name, value } = event.target;\n\n    setFormInputData((formInputData) => ({ ...formInputData, [name]: value }));\n\n    setFormErrors([]);\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    let profileData = {\n      firstName: formInputData.firstName,\n      lastName: formInputData.lastName,\n      email: formInputData.email,\n      password: formInputData.password,\n    };\n\n    let username = formInputData.username;\n\n    let updatedUser;\n\n    try {\n\n      updatedUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (errors) {\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormInputData((formInputData) => ({ ...formInputData, password: \"\" }));\n\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    setCurrentUser(updatedUser);\n  }\n\n  return (\n    <div className=\"ProfileForm\">\n      <h1> Profile</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label className=\"label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            value={formInputData.username}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n\n        <div>\n          <label className=\"label\" htmlFor=\"firstName\">\n            First Name\n          </label>\n          <input\n            id=\"firstName\"\n            type=\"text\"\n            name=\"firstName\"\n            value={formInputData.firstName}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"lastName\">\n            Last Name\n          </label>\n          <input\n            id=\"lastName\"\n            type=\"text\"\n            name=\"lastName\"\n            value={formInputData.lastName}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={formInputData.email}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n        <div>\n          <label className=\"label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={formInputData.password}\n            onChange={handleChange}\n            style={{ width: \"275px\" }}\n          />\n        </div>\n\n        {formErrors.length ? (\n          <Alert type=\"danger\" messages={formErrors} />\n        ) : null}\n\n        {saveConfirmed ? (\n          <Alert type=\"success\" messages={[\"Updated successfully!\"]} />\n        ) : null}\n\n        <button className=\"profile-btn\">Save Changes</button>\n      </form>\n    </div>\n  );\n}\nexport default ProfileForm;","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./Routes.css\";\n\n// import components\nimport Home from \"../home/Home\";\nimport LoginForm from \"../auth/LoginForm\";\nimport SignupForm from \"../auth/SignupForm\";\nimport CompanyList from \"../companies/CompanyList\";\nimport CompanyDetail from \"../companies/CompanyDetail\";\nimport JobList from \"../jobs/JobList\";\nimport ProfileForm from \"../profile/ProfileForm\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n/** Site-wide routes.\n *\n * Some of the site should only be visitable when logged in. Those routes are\n * wrapped by <PrivateRoute>, which is an authorization component.\n *\n * Visiting a non-existant route results in a friendly message asking user to click one of the links in the navBar\n */\n\nfunction Routes({ signup, login }) {\n  return (\n    <div className=\"Routes\">\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route exact path=\"/signup\">\n          <SignupForm signup={signup} />\n        </Route>\n\n        <Route exact path=\"/login\">\n          <LoginForm login={login} />\n        </Route>\n\n        <PrivateRoute exact path=\"/companies\">\n          <CompanyList />\n        </PrivateRoute>\n\n        <PrivateRoute path=\"/companies/:handle\">\n          <CompanyDetail />\n        </PrivateRoute>\n\n        <PrivateRoute exact path=\"/jobs\">\n          <JobList />\n        </PrivateRoute>\n\n        <PrivateRoute exact path=\"/profile\">\n          <ProfileForm />\n        </PrivateRoute>\n\n        <Route>\n          <div>\n            <p className=\"errorHandler1\">\n              This page cannot be found...\n            </p>\n            <p className=\"errorHandler2\">\n              Please click one of the links to redirect.\n            </p>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default Routes;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport NavBar from \"./routes-nav/NavBar\";\nimport Routes from \"./routes-nav/Routes.js\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport JoblyApi from \"./api/api\";\nimport UserContext from \"./auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\n\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [applicationIds, setApplicationIds] = useState(new Set([]));\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  useEffect(\n    function loadUserInfo() {\n      async function getCurrentUser() {\n        if (token) {\n          try {\n\n            let { username } = jwt.decode(token);\n            JoblyApi.token = token;\n            let currentUser = await JoblyApi.getCurrentUser(username);\n            setCurrentUser(currentUser);\n          } catch (err) {\n            console.error(\"App loadUserInfo: problem loading\", err);\n            setCurrentUser(null);\n          }\n        }\n        setInfoLoaded(true);\n      }\n      setInfoLoaded(false);\n      getCurrentUser();\n    },\n    [token]\n  );\n\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n  function hasAppliedToJob(id) {\n    return applicationIds.has(id);\n  }\n\n  function applyToJob(id) {\n    if (hasAppliedToJob(id)) return;\n    JoblyApi.applyToJob(currentUser.username, id);\n    setApplicationIds(new Set([...applicationIds, id]));\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n    <BrowserRouter>\n      {}\n      <UserContext.Provider\n        value={{ currentUser, setCurrentUser, hasAppliedToJob, applyToJob }}\n      >\n        <div className=\"App\">\n          <NavBar logout={logout} />\n          <Routes login={login} signup={signup} />\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}